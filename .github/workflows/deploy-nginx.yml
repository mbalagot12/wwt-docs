# Simple Nginx Server Sync
name: Deploy to Nginx Server

on:
  # DISABLED: Automatic deployment causes site corruption
  # workflow_run:
  #   workflows: ["Deploy Documentation"]
  #   types:
  #     - completed
  #   branches: [main]

  # Manual trigger
  workflow_dispatch:

env:
  SERVER_USER: ubuntu
  SERVER_HOST: ec2-3-140-61-206.us-east-2.compute.amazonaws.com
  SERVER_PATH: /var/www/wwt-acws.duckdns.org

jobs:
  sync-to-nginx:
    runs-on: ubuntu-latest
    # Only run if manually triggered (automatic trigger disabled to prevent site corruption)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.NGINX_SERVER_SSH_KEY }}

      - name: Add server to known hosts
        run: |
          ssh-keyscan -H ${{ env.SERVER_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          echo "🔍 Testing SSH connection..."
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "echo '✅ SSH connection successful'"

      - name: Sync GitHub Pages to nginx server
        run: |
          echo "🔄 Syncing GitHub Pages to nginx server..."
          echo "Source: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "Target: ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.SERVER_PATH }}"
          
          # Create temporary directory
          TEMP_DIR=$(mktemp -d)
          cd "$TEMP_DIR"
          
          echo "📥 Downloading site from GitHub Pages..."
          wget --recursive \
               --no-parent \
               --no-host-directories \
               --cut-dirs=1 \
               --page-requisites \
               --convert-links \
               --adjust-extension \
               --no-check-certificate \
               --timeout=30 \
               --tries=3 \
               --quiet \
               --show-progress \
               "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" || echo "⚠️ wget completed with warnings (normal for large sites)"
          
          echo "📤 Uploading to nginx server..."
          
          # Ensure target directory exists and sync files
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "sudo mkdir -p ${{ env.SERVER_PATH }}"

          # First, fix permissions so rsync can work
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            sudo chown -R ${{ env.SERVER_USER }}:${{ env.SERVER_USER }} ${{ env.SERVER_PATH }}
            echo '🔧 Permissions fixed for rsync'
          "

          rsync -avz --delete \
                --exclude='.git*' \
                --exclude='*.tmp' \
                --exclude='*.log' \
                ./ ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }}:${{ env.SERVER_PATH }}/

          # Set proper web server permissions
          ssh ${{ env.SERVER_USER }}@${{ env.SERVER_HOST }} "
            sudo chown -R www-data:www-data ${{ env.SERVER_PATH }}
            sudo chmod -R 755 ${{ env.SERVER_PATH }}
            sudo systemctl reload nginx
            echo '✅ Files synced, permissions set, nginx reloaded'
          "

          # Clean up
          rm -rf "$TEMP_DIR"
          echo "✅ Sync completed successfully"

      - name: Verify deployment
        run: |
          echo "🔍 Verifying deployment..."
          sleep 10  # Give nginx a moment to reload

          # Test if we can reach the site (don't fail if not accessible)
          if curl -s -f "https://wwt-acws.duckdns.org/2025.1.STL/" > /dev/null; then
            echo "✅ Site accessible at https://wwt-acws.duckdns.org/2025.1.STL/"
          else
            echo "⚠️ Site not immediately accessible (may need DNS propagation)"
            echo "📝 Files have been synced successfully to the server"
          fi

      - name: Create deployment summary
        run: |
          echo "## ✅ Nginx Server Updated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Server**: ${{ env.SERVER_HOST }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Path**: ${{ env.SERVER_PATH }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Live Site" >> $GITHUB_STEP_SUMMARY
          echo "- **Main**: https://wwt-acws.duckdns.org/" >> $GITHUB_STEP_SUMMARY
          echo "- **2025.1.STL**: https://wwt-acws.duckdns.org/2025.1.STL/" >> $GITHUB_STEP_SUMMARY
