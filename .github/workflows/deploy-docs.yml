# Simple and Reliable Documentation Deployment
name: Deploy Documentation

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'data/**'
      - 'mkdocs.yml'
      - 'requirements.txt'

  # Manual trigger - simplified
  workflow_dispatch:
    inputs:
      description:
        description: 'Deployment description'
        required: false
        default: 'Manual content update'

env:
  PYTHON_VERSION: '3.11'
  TARGET_VERSION: '2025.1.STL'

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install UV
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Set up UV environment
        run: |
          uv venv .venv
          echo "VIRTUAL_ENV=.venv" >> $GITHUB_ENV
          echo "PATH=.venv/bin:$PATH" >> $GITHUB_ENV

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Determine deployment description
        id: description
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            DESCRIPTION="${{ github.event.inputs.description }}"
          else
            DESCRIPTION="Auto-update $(date '+%Y-%m-%d %H:%M')"
          fi
          echo "description=$DESCRIPTION" >> $GITHUB_OUTPUT
          echo "📝 Deployment description: $DESCRIPTION"

      - name: Deploy to 2025.1.STL
        run: |
          VERSION="${{ env.TARGET_VERSION }}"
          DESCRIPTION="${{ steps.description.outputs.description }}"

          echo "🚀 Deploying to version: $VERSION"
          echo "📝 Description: $DESCRIPTION"

          # Deploy to the target version (this updates existing version)
          mike deploy "$VERSION" "$DESCRIPTION" --push

          echo "✅ Version $VERSION updated successfully"

      - name: Verify deployment
        run: |
          echo "📋 Current Mike versions:"
          mike list

          echo "🌐 Live site: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "🎯 Target version: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.TARGET_VERSION }}/"

      - name: Create deployment summary
        run: |
          echo "## ✅ Documentation Updated" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ env.TARGET_VERSION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Description**: ${{ steps.description.outputs.description }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🌐 Live URLs" >> $GITHUB_STEP_SUMMARY
          echo "- **Main Site**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/" >> $GITHUB_STEP_SUMMARY
          echo "- **This Version**: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ env.TARGET_VERSION }}/" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔄 Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "The nginx server will be automatically updated in ~2 minutes." >> $GITHUB_STEP_SUMMARY
